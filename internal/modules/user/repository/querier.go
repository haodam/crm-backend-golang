// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package repository

import (
	"context"
	"database/sql"
)

type Querier interface {
	// AddOrUpdateEmail
	AddOrUpdateEmail(ctx context.Context, arg AddOrUpdateEmailParams) error
	// AddOrUpdatePhoneNumber
	AddOrUpdatePhoneNumber(ctx context.Context, arg AddOrUpdatePhoneNumberParams) error
	// -- name: UpdatePassword :exec
	// UPDATE `pre_go_acc_user_info_9999` SET user_password = ? WHERE user_id = ?;
	AddUserAutoUserId(ctx context.Context, arg AddUserAutoUserIdParams) (sql.Result, error)
	AddUserBase(ctx context.Context, arg AddUserBaseParams) (sql.Result, error)
	AddUserHaveUserId(ctx context.Context, arg AddUserHaveUserIdParams) (sql.Result, error)
	CheckUserBaseExists(ctx context.Context, userAccount string) (int64, error)
	// CountActiveTwoFactorMethods
	CountActiveTwoFactorMethods(ctx context.Context, userID uint32) (int64, error)
	// DisableTwoFactor
	DisableTwoFactor(ctx context.Context, arg DisableTwoFactorParams) error
	EditUserByUserId(ctx context.Context, arg EditUserByUserIdParams) (sql.Result, error)
	// file: pre_go_acc_user_two_factor.sql
	// EnableTwoFactor
	EnableTwoFactorTypeEmail(ctx context.Context, arg EnableTwoFactorTypeEmailParams) error
	FindUsers(ctx context.Context, arg FindUsersParams) ([]PreGoAccUserInfo9999, error)
	GetInfoOTP(ctx context.Context, verifyKeyHash string) (PreGoAccUserVerify9999, error)
	GetOneUserInfo(ctx context.Context, userAccount string) (GetOneUserInfoRow, error)
	GetOneUserInfoAdmin(ctx context.Context, userAccount string) (GetOneUserInfoAdminRow, error)
	// GetTwoFactorMethodByID
	GetTwoFactorMethodByID(ctx context.Context, twoFactorID uint32) (PreGoAccUserTwoFactor9999, error)
	// GetTwoFactorMethodByIDAndType: select lay email de sen otp
	GetTwoFactorMethodByIDAndType(ctx context.Context, arg GetTwoFactorMethodByIDAndTypeParams) (PreGoAccUserTwoFactor9999, error)
	// GetTwoFactorStatus
	GetTwoFactorStatus(ctx context.Context, arg GetTwoFactorStatusParams) (bool, error)
	GetUser(ctx context.Context, userID uint64) (PreGoAccUserInfo9999, error)
	// GetUserTwoFactorMethods
	GetUserTwoFactorMethods(ctx context.Context, userID uint32) ([]PreGoAccUserTwoFactor9999, error)
	GetUsers(ctx context.Context, userID uint64) ([]PreGoAccUserInfo9999, error)
	GetValidOTP(ctx context.Context, verifyKeyHash string) (GetValidOTPRow, error)
	InsertOTPVerify(ctx context.Context, arg InsertOTPVerifyParams) (sql.Result, error)
	// IsTwoFactorEnabled
	IsTwoFactorEnabled(ctx context.Context, userID uint32) (int64, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]PreGoAccUserInfo9999, error)
	LoginUserBase(ctx context.Context, arg LoginUserBaseParams) error
	LogoutUserBase(ctx context.Context, userAccount string) error
	// ReactivateTwoFactor
	ReactivateTwoFactor(ctx context.Context, arg ReactivateTwoFactorParams) error
	// RemoveTwoFactor
	RemoveTwoFactor(ctx context.Context, arg RemoveTwoFactorParams) error
	RemoveUser(ctx context.Context, userID uint64) error
	// UpdateTwoFactorStatusVerification
	UpdateTwoFactorStatus(ctx context.Context, arg UpdateTwoFactorStatusParams) error
	// update lai
	UpdateUserVerificationStatus(ctx context.Context, verifyKeyHash string) error
	// VerifyTwoFactor
	VerifyTwoFactor(ctx context.Context, arg VerifyTwoFactorParams) (int64, error)
}

var _ Querier = (*Queries)(nil)
